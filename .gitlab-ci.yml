stages:
  - lint
  - build

default:
  image: docker:26.1
  services:
    - docker:26.1-dind

lint-backend:
  stage: lint
  script:
    - docker build -t $CI_PROJECT_NAME-backend:test-$CI_JOB_ID --target test -f Dockerfile .
    - docker run --rm $CI_PROJECT_NAME-backend:test-$CI_JOB_ID
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


lint-frontend:
  stage: lint
  script:
    - docker build -t $CI_PROJECT_NAME-frontend:test-$CI_JOB_ID -f Dockerfile_frontend .
    - docker run --rm $CI_PROJECT_NAME-frontend:test-$CI_JOB_ID /bin/sh
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


sec-trivy-src-scan:
  stage: lint
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs --exit-code 1 --no-progress --show-suppressed --scanners vuln .
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'


.template-login-internal-registry: &template-login-internal-registry
  - echo "$CI_REGISTRY_PASSWORD" | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin

.template-login-global-registry: &template-login-global-registry
  - echo "$DOCKERHUB_TOKEN" | docker login -u $DOCKERHUB_USER --password-stdin


build-dev-backend:
  stage: build
  before_script:
    - *template-login-internal-registry
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:dev --build-arg version=$CI_COMMIT_SHORT_SHA --target prod -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE/backend:dev
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG == null'

build-dev-frontend:
  stage: build
  before_script:
    - *template-login-internal-registry
  script:
    - docker build -t $CI_REGISTRY_IMAGE/frontend:dev --build-arg version=$CI_COMMIT_SHORT_SHA -f Dockerfile_frontend .
    - docker push $CI_REGISTRY_IMAGE/frontend:dev
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG == null'

build-release-backend:
  stage: build
  before_script:
    - *template-login-internal-registry
    - *template-login-global-registry
  script:
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG --build-arg version=$CI_COMMIT_TAG --target prod -f Dockerfile .
    - docker tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/backend:latest
    - docker tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG $DOCKERHUB_IMAGE_PREFIX-backend:$CI_COMMIT_TAG
    - docker tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG $DOCKERHUB_IMAGE_PREFIX-backend:latest
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE/backend:latest
    - docker push $DOCKERHUB_IMAGE_PREFIX-backend:$CI_COMMIT_TAG
    - docker push $DOCKERHUB_IMAGE_PREFIX-backend:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'

build-release-frontend:
  stage: build
  before_script:
    - *template-login-internal-registry
    - *template-login-global-registry
  script:
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_TAG --build-arg version=$CI_COMMIT_TAG -f Dockerfile_frontend .
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_TAG $CI_REGISTRY_IMAGE/frontend:latest
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_TAG $DOCKERHUB_IMAGE_PREFIX-frontend:$CI_COMMIT_TAG
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_TAG $DOCKERHUB_IMAGE_PREFIX-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE/frontend:latest
    - docker push $DOCKERHUB_IMAGE_PREFIX-frontend:$CI_COMMIT_TAG
    - docker push $DOCKERHUB_IMAGE_PREFIX-frontend:latest
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
