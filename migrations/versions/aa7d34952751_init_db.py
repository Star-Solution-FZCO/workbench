"""init db

Revision ID: aa7d34952751
Revises:
Create Date: 2024-04-28 22:29:18.575708

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'aa7d34952751'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('config', postgresql.BYTEA(), nullable=True),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('activity_collected', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('private', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('changelogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('cooperation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employee_pools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('positions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('account', sa.String(), nullable=False),
    sa.Column('english_name', sa.String(), nullable=False),
    sa.Column('native_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('public_contacts', sa.String(), nullable=True),
    sa.Column('work_started', sa.Date(), nullable=False),
    sa.Column('work_ended', sa.Date(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('position_id', sa.Integer(), nullable=True),
    sa.Column('grade', sa.String(), nullable=True),
    sa.Column('grade_updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('grade_reason', sa.String(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('cooperation_type_id', sa.Integer(), nullable=True),
    sa.Column('contract_date', sa.Date(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('team_position', sa.String(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('about', sa.String(), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=False),
    sa.Column('availability_time_start', sa.String(), nullable=True),
    sa.Column('availability_time_end', sa.String(), nullable=True),
    sa.Column('archive', sa.String(), nullable=True),
    sa.Column('pararam', sa.String(), nullable=True),
    sa.Column('dismissal_reason', sa.String(), nullable=True),
    sa.Column('probation_period_justification', sa.String(), nullable=True),
    sa.Column('probation_period_started', sa.Date(), nullable=True),
    sa.Column('probation_period_ended', sa.Date(), nullable=True),
    sa.Column('disable_activity_monitor', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('pool_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cooperation_type_id'], ['cooperation_types.id'], name='employee_cooperation_type_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='employee_organization_id_fkey'),
    sa.ForeignKeyConstraint(['pool_id'], ['employee_pools.id'], name='employee_pool_id_fkey'),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], name='employee_position_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account'),
    sa.UniqueConstraint('email')
    )
    op.create_table('team_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('key', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('head_team_id', sa.Integer(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.ForeignKeyConstraint(['head_team_id'], ['teams.id'], name='team_head_team_id_fkey'),
    sa.ForeignKeyConstraint(['manager_id'], ['employees.id'], name='team_manager_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_foreign_key('employee_team_id_fkey', 'employees', 'teams', ['team_id'], ['id'])
    op.create_table('grades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('help_center_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('help_center_portals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('confluence_space_keys', sa.String(), nullable=False),
    sa.Column('youtrack_project', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('holiday_sets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_default', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('issues_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('projects', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quizzes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('pass_percent', sa.Integer(), nullable=False),
    sa.Column('pool_question_count', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('hard_confirm', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests__employee_request_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('work_start', sa.String(), nullable=False),
    sa.Column('work_end', sa.String(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('max_number_parallel_meetings', sa.Integer(), nullable=False),
    sa.Column('calendar_ids', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('youtrack_projects', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('unavailability_label', sa.String(), nullable=False),
    sa.Column('chat_id', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('useful_links',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('youtrack_access_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('token', postgresql.BYTEA(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activities',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('target_name', sa.String(), nullable=True),
    sa.Column('target_link', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('meta', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='activities_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['activity_sources.id'], name='activities_source_id_fkey'),
    sa.PrimaryKeyConstraint('employee_id', 'source_id', 'action', 'time', 'target_id'),
    postgresql_partition_by='RANGE(time)'
    )
    op.create_table('api_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires_in', sa.Integer(), nullable=True),
    sa.Column('token', postgresql.BYTEA(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['employees.id'], name='api_tokens_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('asc__employee__project',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='asc__employee__project_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id', 'project_name'),
    sa.UniqueConstraint('employee_id', 'project_name', name='uc__asc__employee__project__employee_id__project_name')
    )
    op.create_table('asc__employee__role',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='asc__employee__role_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id', 'role'),
    sa.UniqueConstraint('employee_id', 'role', name='uc__asc__employee__role__employee_id__role')
    )
    op.create_table('asc__employee__skill',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('skill', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='asc__employee__skill_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id', 'skill'),
    sa.UniqueConstraint('employee_id', 'skill', name='uc__asc__employee__skill__employee_id__skill')
    )
    op.create_table('asc__employee__team',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='asc__employee__team_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='asc__employee__team_team_id_fkey'),
    sa.PrimaryKeyConstraint('team_id', 'employee_id')
    )
    op.create_table('asc__employee__work_notification_chat',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('chat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='asc__employee__work_notification_chat_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id', 'chat_id'),
    sa.UniqueConstraint('employee_id', 'chat_id', name='uc__asc__employee__work_notification_chat__employee_id__chat_id')
    )
    op.create_table('asc__managers',
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('subordinate_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['employees.id'], name='asc__managers_manager_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subordinate_id'], ['employees.id'], name='asc__managers_subordinate_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('manager_id', 'subordinate_id')
    )
    op.create_table('asc__mentors',
    sa.Column('mentor_id', sa.Integer(), nullable=False),
    sa.Column('mentee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['mentee_id'], ['employees.id'], name='asc__mentors_mentee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['mentor_id'], ['employees.id'], name='asc__mentors_mentor_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('mentor_id', 'mentee_id')
    )
    op.create_table('asc__team__team_tag',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('team_tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='asc__team__team_tag_team_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_tag_id'], ['team_tags.id'], name='asc__team__team_tag_team_tag_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('team_id', 'team_tag_id')
    )
    op.create_table('asc__watchers',
    sa.Column('watcher_id', sa.Integer(), nullable=False),
    sa.Column('watched_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['watched_id'], ['employees.id'], name='asc__watchers_watched_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['watcher_id'], ['employees.id'], name='asc__watchers_watcher_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('watcher_id', 'watched_id')
    )
    op.create_table('audits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('object_id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(), nullable=False),
    sa.Column('class_name', sa.String(), nullable=False),
    sa.Column('time', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('fields', sa.ARRAY(sa.String(length=255)), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('data', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['employees.id'], name='audits_user_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audits_class_name'), 'audits', ['class_name'], unique=False)
    op.create_index(op.f('ix_audits_object_id'), 'audits', ['object_id'], unique=False)
    op.create_index(op.f('ix_audits_table_name'), 'audits', ['table_name'], unique=False)
    op.create_table('counteragents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('english_name', sa.String(), nullable=False),
    sa.Column('contacts', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('group', sa.Boolean(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('team_required', sa.Boolean(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=32), server_default='VALID', nullable=False),
    sa.Column('schedule', sa.String(), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['manager_id'], ['employees.id'], name='counteragents_manager_id_fkey'),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], name='counteragents_organization_id_fkey'),
    sa.ForeignKeyConstraint(['parent_id'], ['counteragents.id'], name='counteragents_parent_id_fkey'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='counteragents_team_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('english_name'),
    sa.UniqueConstraint('username')
    )
    op.create_table('employee__activity_source_aliases',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('alias', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='employee__activity_source_aliases_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['source_id'], ['activity_sources.id'], name='employee__activity_source_aliases_source_id_fkey'),
    sa.PrimaryKeyConstraint('employee_id', 'source_id')
    )
    op.create_table('employee__otp',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('secret', postgresql.BYTEA(), nullable=False),
    sa.Column('digits', sa.Integer(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('digest', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='employee__otp_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id')
    )
    op.create_table('employee__schedule',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('holiday_set_id', sa.Integer(), nullable=True),
    sa.Column('dow', sa.Integer(), nullable=False),
    sa.Column('start', sa.Date(), nullable=False),
    sa.Column('end', sa.Date(), nullable=True),
    sa.Column('vacation_days_per_year', sa.Integer(), nullable=False),
    sa.Column('individual_working_hours', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='employee__schedule_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['holiday_set_id'], ['holiday_sets.id'], name='employee__schedule_holiday_set_id_fkey'),
    sa.PrimaryKeyConstraint('employee_id', 'start'),
    sa.UniqueConstraint('employee_id', 'end', name='uc__employee__schedule__employee_id__end')
    )
    op.create_table('employee__schedule_exclusions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Date(), nullable=False),
    sa.Column('guid', sa.String(), nullable=False),
    sa.Column('type', sa.String(length=32), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('canceled', sa.DateTime(), nullable=True),
    sa.Column('canceled_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['canceled_by_id'], ['employees.id'], name='employee__schedule_exclusions_canceled_by_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='employee__schedule_exclusions_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='employee__schedule_exclusions_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('uc__employee__schedule_exclusions__employee_id__day', 'employee__schedule_exclusions', ['employee_id', 'day'], unique=True, postgresql_where=sa.text('canceled IS NULL'))
    op.create_table('employee__tm',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('last_logon', sa.DateTime(), nullable=True),
    sa.Column('key', postgresql.BYTEA(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='employee__tm_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id')
    )
    op.create_table('employee__vacation_correction',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='employee__vacation_correction_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='employee__vacation_correction_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['employees.id'], name='group__owner_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('owner_id', 'name', name='uc__group__owner_id__name')
    )
    op.create_table('help_center_portal_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('portal_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['portal_id'], ['help_center_portals.id'], name='help_center_portal_groups_portal_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holiday_set__holiday',
    sa.Column('holiday_set_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('day', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=32), server_default='holiday', nullable=False),
    sa.ForeignKeyConstraint(['holiday_set_id'], ['holiday_sets.id'], name='holiday_set__holiday_holiday_set_id_fkey',),
    sa.PrimaryKeyConstraint('holiday_set_id', 'day')
    )
    op.create_table('issues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('issue_id', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=False),
    sa.Column('severity', sa.String(), nullable=True),
    sa.Column('priority', sa.String(), nullable=True),
    sa.Column('sprints', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('unplanned', sa.Boolean(), nullable=False),
    sa.Column('due_date', sa.DateTime(), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assignee_id'], ['employees.id'], name='issues_assignee_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('recipient_id', sa.Integer(), nullable=False),
    sa.Column('read', sa.DateTime(), nullable=True),
    sa.Column('show_on_main_page', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['recipient_id'], ['employees.id'], name='notifications_recipient_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('oauth_clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('client_secret', postgresql.BYTEA(), nullable=False),
    sa.Column('grant_types', sa.ARRAY(sa.String(length=32)), nullable=False),
    sa.Column('response_types', sa.ARRAY(sa.String(length=32)), nullable=False),
    sa.Column('redirect_uris', sa.ARRAY(sa.String()), nullable=False),
    sa.Column('scope', sa.String(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='oauth_clients_created_by_id_fkey',),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id')
    )
    op.create_table('policies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('canceled', sa.DateTime(), nullable=True),
    sa.Column('canceled_by_id', sa.Integer(), nullable=True),
    sa.Column('quiz_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['canceled_by_id'], ['employees.id'], name='policies_canceled_by_id_fkey'),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='policies_quiz_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('quiz_employee_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('finished', sa.DateTime(), nullable=True),
    sa.Column('confirmed', sa.DateTime(), nullable=True),
    sa.Column('passed', sa.Boolean(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='quiz_employee_results_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='quiz_employee_results_quiz_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quiz_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('solution', sa.String(), nullable=False),
    sa.Column('required', sa.Boolean(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['quiz_id'], ['quizzes.id'], name='quiz_questions_quiz_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests__add_employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('approved_by_hr_id', sa.Integer(), nullable=True),
    sa.Column('approved_by_admin_id', sa.Integer(), nullable=True),
    sa.Column('employee_data', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False),
    sa.Column('onboarding_data', sa.String(), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_admin_id'], ['employees.id'], name='requests__add_employee_approved_by_admin_id_fkey'),
    sa.ForeignKeyConstraint(['approved_by_hr_id'], ['employees.id'], name='requests__add_employee_approved_by_hr_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='requests__add_employee_created_by_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests__dismiss_employee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('dismiss_datetime', sa.DateTime(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('checklist_checked', sa.Boolean(), nullable=False),
    sa.Column('youtrack_issue_id', sa.String(), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_id'], ['employees.id'], name='requests__dismiss_employee_approved_by_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='requests__dismiss_employee_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='requests__dismiss_employee_employee_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests__team_join',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('closed_by_id', sa.Integer(), nullable=True),
    sa.Column('approved_by_id', sa.Integer(), nullable=True),
    sa.Column('applicant_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(), nullable=True),
    sa.Column('message', sa.String(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['applicant_id'], ['employees.id'], name='requests__team_join_applicant_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['approved_by_id'], ['employees.id'], name='requests__team_join_approved_by_id_fkey'),
    sa.ForeignKeyConstraint(['closed_by_id'], ['employees.id'], name='requests__team_join_closed_by_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='requests__team_join_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], name='requests__team_join_team_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tm_records',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=8), nullable=False),
    sa.Column('time', sa.DateTime(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='tm_records_employee_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('employee_id', 'time'),
    postgresql_partition_by='RANGE(time)'
    )
    op.create_table('youtrack_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('youtrack_id', sa.String(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('token_id', sa.Integer(), nullable=True),
    sa.Column('banned', sa.Boolean(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='youtrack_accounts_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['token_id'], ['youtrack_access_tokens.id'], name='youtrack_accounts_token_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('youtrack_id')
    )
    op.create_table('asc__group__members',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='asc__group__members_group_id_fkey'),
    sa.ForeignKeyConstraint(['member_id'], ['employees.id'], name='asc__group__members_member_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('group_id', 'member_id')
    )
    op.create_table('counteragents_credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('counteragent_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.String(), nullable=True),
    sa.Column('notifications', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), nullable=False),
    sa.Column('bundle', postgresql.JSONB(none_as_null=True, astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.String(length=32), server_default='PENDING', nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['counteragent_id'], ['counteragents.id'], name='counteragents_credentials_counteragent_id_fkey'),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='counteragents_credentials_created_by_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('help_center_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('revision', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('short_description', sa.String(), nullable=False),
    sa.Column('portal_group_id', sa.Integer(), nullable=False),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('user_fields', sa.String(), nullable=False),
    sa.Column('predefined_custom_fields', sa.String(), nullable=False),
    sa.Column('tags', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['portal_group_id'], ['help_center_portal_groups.id'], name='help_center_services_portal_group_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('policy__employee_exclusions',
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='policy__employee_exclusions_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='policy__employee_exclusions_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], name='policy__employee_exclusions_policy_id_fkey'),
    sa.PrimaryKeyConstraint('policy_id', 'employee_id')
    )
    op.create_table('policy_revisions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('policy_revision', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=False),
    sa.Column('published', sa.DateTime(), nullable=True),
    sa.Column('published_by_id', sa.Integer(), nullable=True),
    sa.Column('text', sa.TEXT(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='policy__revision_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], name='policy__revision_policy_id_fkey'),
    sa.ForeignKeyConstraint(['published_by_id'], ['employees.id'], name='policy__revision_published_by_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['employees.id'], name='policy__revision_updated_by_id_fkey'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('policy_id', 'policy_revision', name='uc__policy_revisions__policy_id__policy_revision')
    )
    op.create_table('quiz_employee_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.String(), nullable=False),
    sa.Column('options', sa.String(), nullable=False),
    sa.Column('result_id', sa.Integer(), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['result_id'], ['quiz_employee_results.id'], name='quiz_employee_answers_result_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('quiz_question_options',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('correct', sa.Boolean(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['quiz_questions.id'], name='quiz_question_options_question_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('help_center_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('issue_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['employees.id'], name='help_center_requests_created_by_id_fkey'),
    sa.ForeignKeyConstraint(['service_id'], ['help_center_services.id'], name='help_center_requests_service_id_fkey'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('policy_revision__approve_records',
    sa.Column('policy_revision_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('approved', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name='policy_revision__approve_records_employee_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['policy_revision_id'], ['policy_revisions.id'], name='policy_revision__approve_records_policy_revision_id_fkey'),
    sa.PrimaryKeyConstraint('policy_revision_id', 'employee_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('policy_revision__approve_records')
    op.drop_table('help_center_requests')
    op.drop_table('quiz_question_options')
    op.drop_table('quiz_employee_answers')
    op.drop_table('policy_revisions')
    op.drop_table('policy__employee_exclusions')
    op.drop_table('help_center_services')
    op.drop_table('counteragents_credentials')
    op.drop_table('asc__group__members')
    op.drop_table('youtrack_accounts')
    op.drop_table('tm_records')
    op.drop_table('requests__team_join')
    op.drop_table('requests__dismiss_employee')
    op.drop_table('requests__add_employee')
    op.drop_table('quiz_questions')
    op.drop_table('quiz_employee_results')
    op.drop_table('policies')
    op.drop_table('oauth_clients')
    op.drop_table('notifications')
    op.drop_table('issues')
    op.drop_table('holiday_set__holiday')
    op.drop_table('help_center_portal_groups')
    op.drop_table('groups')
    op.drop_table('employee__vacation_correction')
    op.drop_table('employee__tm')
    op.drop_index('uc__employee__schedule_exclusions__employee_id__day', table_name='employee__schedule_exclusions', postgresql_where=sa.text('canceled IS NULL'))
    op.drop_table('employee__schedule_exclusions')
    op.drop_table('employee__schedule')
    op.drop_table('employee__otp')
    op.drop_table('employee__activity_source_aliases')
    op.drop_table('counteragents')
    op.drop_index(op.f('ix_audits_table_name'), table_name='audits')
    op.drop_index(op.f('ix_audits_object_id'), table_name='audits')
    op.drop_index(op.f('ix_audits_class_name'), table_name='audits')
    op.drop_table('audits')
    op.drop_table('asc__watchers')
    op.drop_table('asc__team__team_tag')
    op.drop_table('asc__mentors')
    op.drop_table('asc__managers')
    op.drop_table('asc__employee__work_notification_chat')
    op.drop_table('asc__employee__team')
    op.drop_table('asc__employee__skill')
    op.drop_table('asc__employee__role')
    op.drop_table('asc__employee__project')
    op.drop_table('api_tokens')
    op.drop_table('activities')
    op.drop_table('youtrack_access_tokens')
    op.drop_table('users')
    op.drop_table('useful_links')
    op.drop_table('requests__employee_request_settings')
    op.drop_table('quizzes')
    op.drop_table('issues_settings')
    op.drop_table('holiday_sets')
    op.drop_table('help_center_portals')
    op.drop_table('help_center_attachments')
    op.drop_table('grades')
    op.drop_constraint('employee_team_id_fkey', 'employees', type_='foreignkey')
    op.drop_table('teams')
    op.drop_table('team_tags')
    op.drop_table('employees')
    op.drop_table('positions')
    op.drop_table('organizations')
    op.drop_table('employee_pools')
    op.drop_table('cooperation_types')
    op.drop_table('changelogs')
    op.drop_table('activity_sources')
    # ### end Alembic commands ###
